name: Full Slate

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || true

    # ---------- FETCH RAW FEEDS ----------
      - name: Fetch raw data (multi-provider fallbacks)
        env:
        MSF_API_KEY: ${{ secrets.MSF_API_KEY }}
        APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
        GSIS_USERNAME: ${{ secrets.GSIS_USERNAME }}
        GSIS_PASSWORD: ${{ secrets.GSIS_PASSWORD }}
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        SWID: ${{ secrets.SWID }}
        run: |
          set -e
          echo "[fetch_all] season=2025"
          if [ -f external/nflverse_bundle/fetch_all.py ]; then
          python external/nflverse_bundle/fetch_all.py --season 2025
          else
          echo "WARN: fetch_all.py not found; skipping."
          fi

    # ---------- COMPOSE METRICS ----------
      - name: Compose metrics (make_all) with strict=0
        env:
        STRICT: "0"
        MSF_API_KEY: ${{ secrets.MSF_API_KEY }}
        APISPORTS_KEY: ${{ secrets.APISPORTS_KEY }}
        GSIS_USERNAME: ${{ secrets.GSIS_USERNAME }}
        GSIS_PASSWORD: ${{ secrets.GSIS_PASSWORD }}
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        SWID: ${{ secrets.SWID }}
        run: |
          set -e
          if [ -f external/nflverse_bundle/make_all.py ]; then
          python external/nflverse_bundle/make_all.py --season 2025
          else
          echo "ERROR: make_all.py not found"; exit 1
          fi

    # ---------- BUILD GAME LINES / PROPS (if you have scripts for these) ----------
      - name: Build game_lines (if script exists)
        run: |
          set -e
          if [ -f scripts/build_game_lines.py ]; then
          python scripts/build_game_lines.py --season 2025
          else
          echo "INFO: scripts/build_game_lines.py not present; skipping."
          fi

      - name: Build props_raw (if script exists)
        env:
        ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          set -e
          if [ -f scripts/build_props_raw.py ]; then
          python scripts/build_props_raw.py --season 2025
          else
          echo "INFO: scripts/build_props_raw.py not present; skipping."
          fi

    # ---------- QUICK SANITY/LOGS ----------
      - name: Sanity check key outputs
        run: |
          python - <<'PY'
          from pathlib import Path
          import pandas as pd

          paths = [
          "outputs/metrics/team_form.csv",
          "outputs/metrics/player_form.csv",
          "data/weather.csv",
          "data/roles.csv",
          "data/injuries.csv",
          "data/coverage.csv",
          "data/cb_assignments.csv",
          "outputs/game_lines.csv",
          "outputs/props_raw.csv",
          ]

        for p in paths:
            pp = Path(p)
            print(f"\n=== {p} ===")
            if not pp.exists():
                print("MISSING")
                continue
            sz = pp.stat().st_size
            print("size:", sz)
            try:
                df = pd.read_csv(pp)
                print("rows:", len(df), "cols:", list(df.columns)[:12])
                print(df.head(3).to_string(index=False))
            except Exception as e:
                print("read error:", e)
        PY

    # ---------- VALIDATE ----------
    - name: Validate data pack outputs
      run: python scripts/validate_inputs.py

    # ---------- ARTIFACTS FOR DEBUG ----------
    - name: Upload artifacts (data & outputs)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: datapack-${{ github.run_id }}
        path: |
          data/**
          outputs/**
          external/nflverse_bundle/outputs/**
        if-no-files-found: warn
