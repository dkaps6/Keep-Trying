name: "Full Slate: Lines + Features + Model"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-extended.txt

      # ESPN provider (SportsDataverse) is OPTIONAL.
      # If GitHub blocks git cloning, we continue anyway and rely on other providers.
      - name: (Optional) Install ESPN provider (sportsdataverse)
        continue-on-error: true
        run: |
          python -m pip install --upgrade pip
          pip install --no-deps "git+https://github.com/sportsdataverse/py-sportsdataverse.git@main#egg=sportsdataverse"
          python - <<'PY'
          try:
              import sportsdataverse
              print("sportsdataverse available ✅")
          except Exception as e:
              print("sportsdataverse not available (optional) ❌:", e)
          PY

      - name: Sanity check Odds API key
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python - <<'PY'
          import os, requests
          key = os.environ.get("ODDS_API_KEY", "")
          if not key:
              print("⚠️  No ODDS_API_KEY set; game/props fetch will fail.")
          else:
              r = requests.get(f"https://api.the-odds-api.com/v4/sports?apiKey={key}", timeout=20)
              print("Status:", r.status_code)
              print("Remaining credits:", r.headers.get("x-requests-remaining"))
              if r.status_code != 200:
                  print("Notice:", r.text)
          PY

      - name: Ensure dirs
        run: |
          mkdir -p metrics inputs outputs data

      # Fetch all external features with provider fallbacks
      - name: Fetch external metrics (free sources)
        run: |
          python -m scripts.fetch_all --season 2025

      - name: Run pipeline
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python run_model.py --date today --season 2025 --write outputs

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nfl-outputs
          path: |
            outputs/
            metrics/
            inputs/
