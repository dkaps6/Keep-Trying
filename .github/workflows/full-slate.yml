name: "Full Slate: Lines + Features + Model"

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Make the secret available to ALL steps in this job
    env:
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Simple, YAML-safe check (no heredocs)
      - name: "Check Odds API key presence"
        shell: bash
        run: |
          if [ -z "${ODDS_API_KEY}" ]; then
            echo "⚠️  ODDS_API_KEY not set (Odds API props will fail)."
          else
            echo "ODDS_API_KEY set (suffix ${ODDS_API_KEY: -4})"
          fi

      # Ping the two Odds API endpoints from the runner (no heredocs)
      - name: "Ping Odds API: featured odds (h2h)"
        shell: bash
        run: |
          curl -sS "https://api.the-odds-api.com/v4/sports/americanfootball_nfl/odds?regions=us&markets=h2h&apiKey=${ODDS_API_KEY}" | head -c 400 || true

      - name: "Ping Odds API: one event player props"
        shell: bash
        run: |
          EID=$(curl -s "https://api.the-odds-api.com/v4/sports/americanfootball_nfl/odds?regions=us&markets=h2h&apiKey=${ODDS_API_KEY}" | python -c "import sys,json; d=json.load(sys.stdin); print(d[0]['id'] if d else '')")
          echo "Event ID: ${EID}"
          if [ -n "${EID}" ]; then
            curl -sS "https://api.the-odds-api.com/v4/sports/americanfootball_nfl/events/${EID}/odds?regions=us&markets=player_pass_yds,player_reception_yds&apiKey=${ODDS_API_KEY}" | head -c 400 || true
          else
            echo "Could not enumerate events (check the featured-odds ping above)."
          fi

      - name: Ensure dirs
        run: |
          mkdir -p metrics inputs outputs data

      # Fetch metrics/props (your fetcher tries Odds API -> DK -> manual CSV)
      - name: Fetch external metrics (free sources)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python -m scripts.fetch_all --season 2025

      # Quick peek so you can confirm props were ingested before pricing
      - name: Peek props snapshot
        shell: bash
        run: |
          for p in outputs/props_raw.csv inputs/props.csv data/odds_sample.csv; do
            if [ -f "$p" ]; then
              rows=$(( $(wc -l < "$p") - 1 )); [ $rows -lt 0 ] && rows=0
              echo "$p: ${rows} rows"
              head -n 5 "$p" || true
            fi
          done

      - name: Run pipeline
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
        run: |
          python run_model.py --date today --season 2025 --write outputs

      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nfl-outputs
          path: |
            outputs/
            metrics/
          if-no-files-found: warn
